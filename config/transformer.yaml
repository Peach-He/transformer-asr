seed: 74443
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/transformer/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save

pretrained_lm_tokenizer_path: speechbrain/asr-transformer-transformerlm-librispeech

# Data files
data_folder: /home/vmagent/app/dataset/LibriSpeech
train_splits: ["train-clean-100", "train-clean-360", "train-other-500"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean", "test-other"]
skip_prep: False
train_csv: !ref <data_folder>/train.csv
valid_csv: !ref <data_folder>/dev-clean.csv
test_csv:
    - !ref <data_folder>/test-clean.csv
    - !ref <data_folder>/test-other.csv

ckpt_interval_minutes: 30 # save checkpoint every N min

# Training parameters
number_of_epochs: 60
batch_size: 32
ctc_weight: 0.3
grad_accumulation_factor: 2
max_grad_norm: 5.0
loss_reduction: 'batchmean'
sorting: random

dynamic_batching: False

dynamic_batch_sampler:
    feats_hop_size: 0.01
    max_batch_len: 100000 # in terms of frames
    num_buckets: 200
    shuffle_ex: False # if true re-creates batches at each epoch shuffling examples.
    batch_ordering: descending
    max_batch_ex: -1

lr_adam: 0.001

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    shuffle: True
    num_workers: 12

valid_dataloader_opts:
    batch_size: 1

test_dataloader_opts:
    batch_size: 1

####################### Model parameters ###########################
# Transformer
d_model: 512
nhead: 4
num_encoder_layers: 12
num_decoder_layers: 6
d_ffn: 2048
transformer_dropout: 0.1
activation: !name:torch.nn.GELU
output_neurons: 5000

# Outputs
blank_index: 0
label_smoothing: 0.0
pad_index: 0
bos_index: 1
eos_index: 2

# Decoding parameters
min_decode_ratio: 0.0
max_decode_ratio: 1.0
valid_search_interval: 10
valid_beam_size: 10
test_beam_size: 66
lm_weight: 0.60
ctc_weight_decode: 0.40

############################## models ################################

# CNN: !new:model.module.convolution.ConvolutionFrontEnd
#     input_shape: (8, 10, 80)
#     num_blocks: 3
#     num_layers_per_block: 1
#     out_channels: (64, 64, 64)
#     kernel_sizes: (5, 5, 1)
#     strides: (2, 2, 1)
#     residuals: (False, False, True)

# Transformer: !new:model.TransformerASR.TransformerASR
#     input_size: 1280
#     tgt_vocab: !ref <output_neurons>
#     d_model: !ref <d_model>
#     nhead: !ref <nhead>
#     num_encoder_layers: !ref <num_encoder_layers>
#     num_decoder_layers: !ref <num_decoder_layers>
#     d_ffn: !ref <d_ffn>
#     dropout: !ref <transformer_dropout>
#     activation: !ref <activation>
#     attention_type: regularMHA
#     normalize_before: True
#     causal: False

# lm_model: !new:model.TransformerLM.TransformerLM
#     vocab: !ref <output_neurons>
#     d_model: 768
#     nhead: 12
#     num_encoder_layers: 12
#     num_decoder_layers: 0
#     d_ffn: 3072
#     dropout: 0.0
#     activation: !name:torch.nn.GELU
#     normalize_before: False

# tokenizer: !new:sentencepiece.SentencePieceProcessor

# ctc_lin: !new:model.module.linear.Linear
#     input_size: !ref <d_model>
#     n_neurons: !ref <output_neurons>

# seq_lin: !new:model.module.linear.Linear
#     input_size: !ref <d_model>
#     n_neurons: !ref <output_neurons>

# modules:
#     CNN: !ref <CNN>
#     Transformer: !ref <Transformer>
#     seq_lin: !ref <seq_lin>
#     ctc_lin: !ref <ctc_lin>
#     normalize: !ref <normalize>

# model: !new:torch.nn.ModuleList
#     - [!ref <CNN>, !ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]

# Adam: !name:torch.optim.Adam
#     lr: !ref <lr_adam>
#     betas: (0.9, 0.98)
#     eps: 0.000000001


# valid_search: !new:model.decoders.S2STransformerBeamSearch
#     modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
#     bos_index: !ref <bos_index>
#     eos_index: !ref <eos_index>
#     blank_index: !ref <blank_index>
#     min_decode_ratio: !ref <min_decode_ratio>
#     max_decode_ratio: !ref <max_decode_ratio>
#     beam_size: !ref <valid_beam_size>
#     ctc_weight: !ref <ctc_weight_decode>
#     using_eos_threshold: False
#     length_normalization: False


# test_search: !new:model.decoders.S2STransformerBeamSearch
#     modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
#     bos_index: !ref <bos_index>
#     eos_index: !ref <eos_index>
#     blank_index: !ref <blank_index>
#     min_decode_ratio: !ref <min_decode_ratio>
#     max_decode_ratio: !ref <max_decode_ratio>
#     beam_size: !ref <test_beam_size>
#     ctc_weight: !ref <ctc_weight_decode>
#     lm_weight: !ref <lm_weight>
#     lm_modules: !ref <lm_model>
#     temperature: 1.15
#     temperature_lm: 1.15
#     using_eos_threshold: False
#     length_normalization: True

log_softmax: !new:torch.nn.LogSoftmax
    dim: -1

ctc_cost: !name:trainer.losses.ctc_loss
    blank_index: !ref <blank_index>
    reduction: !ref <loss_reduction>

seq_cost: !name:trainer.losses.kldiv_loss
    label_smoothing: !ref <label_smoothing>
    reduction: !ref <loss_reduction>

noam_annealing: !new:trainer.schedulers.NoamScheduler
    lr_initial: !ref <lr_adam>
    n_warmup_steps: 25000
    #model_size: !ref <d_model>

# checkpointer: !new:utils.checkpoints.Checkpointer
#     checkpoints_dir: !ref <save_folder>
#     recoverables:
#         model: !ref <model>
#         noam_scheduler: !ref <noam_annealing>
#         normalizer: !ref <normalize>
#         counter: !ref <epoch_counter>

epoch_counter: !new:utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

normalize: !new:data.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

augmentation: !new:data.augment.SpecAugment
    time_warp: False
    time_warp_window: 5
    time_warp_mode: bicubic
    freq_mask: True
    n_freq_mask: 4
    time_mask: True
    n_time_mask: 4
    replace_with_zero: False
    freq_mask_width: 15
    time_mask_width: 20

speed_perturb: True

compute_features: !new:data.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

error_rate_computer: !name:utils.metric_stats.ErrorRateStats
acc_computer: !name:utils.Accuracy.AccuracyStats

lm_model_path: !ref <save_folder>/lm.ckpt
tokenizer_path: !ref <save_folder>/tokenizer.ckpt
